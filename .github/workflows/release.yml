name: Release
on:
  push:
    tags:
      - v[0-9]+\.[0-9]+\.[0-9]+
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version-file: .nvmrc
          registry-url: https://registry.npmjs.org
          scope: '@waves-domains'
      - run: yarn install --frozen-lockfile
      - run: yarn run build
      - run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

  report:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Find previous Git tag
        run: echo ::set-output name=VALUE::$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`)
        id: prevTag

      - name: Find current Git tag
        run: echo ::set-output name=VALUE::$(git describe --abbrev=0 --tags `git rev-list --tags --max-count=1`)
        id: currentTag

      - name: Get list of released issues
        run: >-
          echo ::set-output name=LIST::$(
          git log --reverse --pretty=format:"%s" ^"$PREV_TAG" "$CURRENT_TAG"
          | grep -oE "^KEEP\-[0-9]+"
          | jq --arg TAG "${CURRENT_TAG:1}" -Rsc '{issues:[split("\n")|unique|.[]|select(length > 0)],releaseVersion:$TAG,component:"Domains Library"}' )
        env:
          PREV_TAG: ${{ steps.prevTag.outputs.VALUE }}
          CURRENT_TAG: ${{ steps.currentTag.outputs.VALUE }}
        id: issues

      - name: Report released issues
        run: |
          curl -X POST -H 'Content-type: application/json' --data "$ISSUES_LIST" "$HOOKS_URL/$HOOK_RELEASE"
        env:
          ISSUES_LIST: ${{ steps.issues.outputs.LIST }}
          HOOKS_URL: ${{ secrets.HOOKS_URL }}
          HOOK_RELEASE: ${{ secrets.HOOK_RELEASE }}
